// Generated by CoffeeScript 1.8.0
(function() {
  "use strict";
  var angular_uikit, ukAlert, ukArticle, ukBadge, ukButton, ukButtonGroup, ukClose, ukComment, ukCommentList, ukDivider, ukIcon, ukPanel, _applyModifiers, _createElement;

  _applyModifiers = function(element, modifiers, directive) {
    var modifier, _i, _len, _ref, _results;
    if (modifiers) {
      _ref = modifiers.split(",");
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        modifier = _ref[_i];
        _results.push(element.addClass("uk-" + directive + "-" + modifier));
      }
      return _results;
    }
  };

  _createElement = function(mapper, attribute, fallback) {
    return angular.element(mapper[attribute] ? mapper[attribute] : fallback);
  };

  angular_uikit = angular.module("angular-uikit", ["ngSanitize"]);

  ukArticle = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      scope: {
        articleTitle: "@",
        meta: "@",
        lead: "@"
      },
      templateUrl: "templates/ukarticle.html",
      link: function($scope, $element, $attributes) {
        return $scope.readmore = angular.fromJson($attributes.readmore);
      }
    };
  };

  angular_uikit.directive("ukArticle", ukArticle);

  ukPanel = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      scope: {
        panelTitle: "@",
        teaser: "@"
      },
      templateUrl: "templates/ukpanel.html",
      link: function($scope, $element, $attributes) {
        $scope.badge = angular.fromJson($attributes.badge);
        $scope.icon = angular.fromJson($attributes.icon);
        return _applyModifiers($element, $attributes.modifiers, "panel");
      }
    };
  };

  angular_uikit.directive("ukPanel", ukPanel);

  ukDivider = function() {
    return {
      restrict: "E",
      replace: true,
      templateUrl: "templates/ukdivider.html"
    };
  };

  angular_uikit.directive("ukDivider", ukDivider);

  ukComment = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      scope: {
        commentTitle: "@",
        meta: "@"
      },
      templateUrl: "templates/ukcomment.html",
      link: function($scope, $element, $attributes) {
        $scope.avatar = angular.fromJson($attributes.avatar);
        return _applyModifiers($element, $attributes.modifiers, "comment");
      }
    };
  };

  angular_uikit.directive("ukComment", ukComment);

  ukCommentList = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      templateUrl: "templates/ukcommentlist.html",
      link: function($scope, $element, $attributes) {
        var comment, _i, _len, _ref, _results;
        _ref = $element.children();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          comment = _ref[_i];
          _results.push(angular.element(comment).wrap("<li />"));
        }
        return _results;
      }
    };
  };

  angular_uikit.directive("ukCommentList", ukCommentList);

  ukButton = function() {
    return {
      restrict: "E",
      replace: true,
      templateUrl: "templates/ukbutton.html",
      link: function($scope, $element, $attributes) {
        var href, mapper, temp_element;
        mapper = {
          "button": "<button type='button' />"
        };
        href = $attributes.href ? $attributes.href : "";
        temp_element = _createElement(mapper, $attributes.type, "<a href='" + href + "' />");
        temp_element.addClass("uk-button");
        if ($attributes.text) {
          temp_element.text($attributes.text);
        }
        if ("disabled" in $attributes) {
          temp_element.attr("disabled", "");
        }
        if ("fullwidth" in $attributes) {
          temp_element.addClass("uk-width-1-1");
        }
        _applyModifiers(temp_element, $attributes.modifiers, "button");
        return $element.replaceWith(temp_element);
      }
    };
  };

  angular_uikit.directive("ukButton", ukButton);

  ukButtonGroup = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      templateUrl: "templates/ukbuttongroup.html"
    };
  };

  angular_uikit.directive("ukButtonGroup", ukButtonGroup);

  ukIcon = function() {
    return {
      restrict: "E",
      replace: true,
      templateUrl: "templates/ukicon.html",
      link: function($scope, $element, $attributes) {
        var href, mapper, temp_element;
        href = $attributes.href ? $attributes.href : "";
        mapper = {
          "button": "<a href='" + href + "' />"
        };
        temp_element = _createElement(mapper, $attributes.modifiers, "<i />");
        temp_element.addClass("uk-icon-" + $attributes.type);
        _applyModifiers(temp_element, $attributes.modifiers, "icon");
        return $element.replaceWith(temp_element);
      }
    };
  };

  angular_uikit.directive("ukIcon", ukIcon);

  ukClose = function() {
    return {
      restrict: "E",
      replace: true,
      templateUrl: "templates/ukclose.html",
      link: function($scope, $element, $attributes) {
        if ("inalert" in $attributes) {
          $scope.inalert = true;
        }
        if ("inmodal" in $attributes) {
          $scope.inmodal = true;
        }
        return _applyModifiers($element, $attributes.modifiers, "close");
      }
    };
  };

  angular_uikit.directive("ukClose", ukClose);

  ukBadge = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      templateUrl: "templates/ukbadge.html",
      link: function($scope, $element, $attributes) {
        if ("inpanel" in $attributes) {
          $scope.inpanel = true;
        }
        return _applyModifiers($element, $attributes.modifiers, "badge");
      }
    };
  };

  angular_uikit.directive("ukBadge", ukBadge);

  ukAlert = function() {
    return {
      restrict: "E",
      replace: true,
      transclude: true,
      scope: true,
      templateUrl: "templates/ukalert.html",
      link: function($scope, $element, $attributes) {
        if ("close" in $attributes) {
          $scope.close = $attributes.close === "" ? true : $attributes.close;
          $element.attr("data-uk-alert", "");
        }
        return _applyModifiers($element, $attributes.modifiers, "alert");
      }
    };
  };

  angular_uikit.directive("ukAlert", ukAlert);

}).call(this);
